# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - 'src/Tools/*'
    - 'build/AzureDevOps/'

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'src/FontAwesome5.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Generator Release'
  libraryCounter: 'FontAwesome5GeneratorNet_$(Davisol.PackageMajorMinorVersion)'
  libraryBuildRevision: $[counter(variables['libraryCounter'], 1)]
  libraryBuildVersion: '$(Davisol.PackageMajorMinorVersion).$(libraryBuildRevision)'

name: 'FontAwesome5_Generator_NET_v$(Davisol.PackageMajorMinorVersion).$(libraryBuildRevision)$(Rev:.r)'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: Assembly-Info-NetFramework@2
  inputs:
    Path: '$(Build.SourcesDirectory)'
    FileNames: |
      src\Tools\**\AssemblyInfo.cs
      src\Tools\**\AssemblyInfo.vb
    InsertAttributes: true
    FileEncoding: 'utf-8'
    WriteBOM: false
    Title: 'FontAwesome5.Generator'
    Product: 'FontAwesome5.Generator'
    Copyright: 'Copyright Â©  2018'
    VersionNumber: '$(foundationBuildVersion)'
    FileVersionNumber: '$(foundationBuildVersion)'
    InformationalVersion: '$(foundationBuildVersion)'
    LogLevel: 'verbose'
    FailOnWarning: false
    DisableTelemetry: false
  
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(buildOutDirectory)'
    Contents: |
      **/*
      !**/*Test*.*
      !/app.publish
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    OverWrite: true